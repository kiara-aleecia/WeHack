# -*- coding: utf-8 -*-
"""WeHack.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17VmXEY9Rr_hMqVEajgxjITMWtVZuzxA3
"""

import requests
import string
from lxml import html
from googlesearch import search
from bs4 import BeautifulSoup

# to search
# print(chatbot_query('how old is samuel l jackson'))

def chatbot_query(query, index=0):
    fallback = 'Sorry, I cannot think of a reply for that.'
    result = ''

    try:
        search_result_list = list(search(query, tld="co.in", num=10, stop=3, pause=1))

        page = requests.get(search_result_list[index])

        tree = html.fromstring(page.content)

        soup = BeautifulSoup(page.content, features="lxml")

        article_text = ''
        article = soup.findAll('p')
        for element in article:
            article_text += '\n' + ''.join(element.findAll(text = True))
        article_text = article_text.replace('\n', '')
        first_sentence = article_text.split('.')
        first_sentence = first_sentence[0].split('?')[0]

        chars_without_whitespace = first_sentence.translate(
            { ord(c): None for c in string.whitespace }
        )

        if len(chars_without_whitespace) > 0:
            result = first_sentence
        else:
            result = fallback

        return result
    except:
        if len(result) == 0: result = fallback
        return result

const submitButton = document.getElementById('submitButton');
const chatbotInput = document.getElementById('chatbotInput');
const chatbotOutput = document.getElementById('chatbotOutput');

submitButton.onclick = userSubmitEventHandler;
chatbotInput.onkeyup = userSubmitEventHandler;

function userSubmitEventHandler(event) {
    if (
        (event.keyCode && event.keyCode === 13) ||
        event.type === 'click'
    ) {
        chatbotOutput.innerText = 'thinking...';
        askChatBot(chatbotInput.value);
    }
}

function askChatBot(userInput) {
    const myRequest = new Request('/', {
        method: 'POST',
        body: userInput
    });

    fetch(myRequest).then(function(response) {
        if (!response.ok) {
            throw new Error('HTTP error, status = ' + response.status);
        } else {
            return response.text();
        }
    }).then(function(text) {
        chatbotInput.value = '';
        chatbotOutput.innerText = text;
    }).catch((err) => {
        console.error(err);
    });
}

!pip install chatterbot

import http.server
import socketserver
from googlesearch import chatterbot

PORT = 8080
DIRECTORY = 'public'

class Handler(http.server.SimpleHTTPRequestHandler):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, directory=DIRECTORY, **kwargs)

    def do_POST(self):
        self.send_response(200)
        content_length = int(self.headers['Content-Length'])
        post_body = self.rfile.read(content_length)
        self.end_headers()
        print('user query', post_body)
        googlesearch = chatterbot(post_body)
        self.wfile.write(str.encode(googlesearch))

with socketserver.TCPServer(('', PORT), Handler) as httpd:
    print('serving at port', PORT)
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        pass
    httpd.server_close()

import http.server
import socketserver
from google_search import chatbot_query

PORT = 8080
DIRECTORY = 'public'

class Handler(http.server.SimpleHTTPRequestHandler):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, directory=DIRECTORY, **kwargs)

    def do_POST(self):
        self.send_response(200)
        content_length = int(self.headers['Content-Length'])
        post_body = self.rfile.read(content_length)
        self.end_headers()
        print('user query', post_body)
        google_search_chatbot_reply = chatbot_query(post_body)
        self.wfile.write(str.encode(google_search_chatbot_reply))

with socketserver.TCPServer(('', PORT), Handler) as httpd:
    print('serving at port', PORT)
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        pass
    httpd.server_close()

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="./style.css">
    <title>Google Based ChatBot</title>
</head>
<body>
    <img class="chatbotImage" src="./chatbot.png" />
    <span id="chatbotOutput" class="chatbotOutput">Find a UTD website:</span>
    <input id="chatbotInput" class="chatbotInput" />
    <input id="submitButton" type="submit" />
    <script src='./app.js'></script>
</body>
</html>

html, body {
    margin: 0px;
    width: 100vw;
    height: 100vh;
    font-family: arial;
    overflow: hidden;
}

.chatbotImage {
    margin-top: 40px;
    width: 35vw;
}

.chatbotOutput {
    font-size: 45px;
}

.chatbotInput {
    margin-top: 10px;
    width: 55vw;
    padding: 20px;
    font-size: 25px;
}

input,
span,
img {
    display: block;
    margin: auto;
    text-align: center;
}